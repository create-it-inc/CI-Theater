it.create {
  jobqueue {
    write-interval-minutes = 5
  }

  mongo {
    db.1 = "10.0.1.7:27107",
    db.2 = "10.0.3.7:27107",
    db.3 = "10.0.5.7:27107",
    options {
      # Used to determine the default read preference and replaces
      # "slaveOk".
      # 'nearest' - Reads go to the nearest repset member available to the database
      # client. Use only if eventually consistent reads are acceptable.
      # The nearest member is the member with the lowest latency between
      # the client and the various repset members.
      #readPreference = "nearest",

      autoConnectRetry = true,
      connectTimeout = 15000,
      connectionsPerHost = 10,
      maxAutoConnectRetryTime = 30000,
      socketTimeout = 60000,
      #maxConnectionIdleTime = 10000,

      # Multiplier for connectionsPerHost that denotes the number of threads
      # that are allowed to wait for connections to become available if the pool
      # is currently exhausted. This is the setting that will cause the
      # "com.mongodb.DBPortPool$SemaphoresOut: Out of semaphores to get db
      # connection" exception. It will throw this exception once this thread
      # queue exceeds the threadsAllowedToBlockForConnectionMultiplier value.
      # For example, if the connectionsPerHost is 10 and this value is 5 up to
      # 50 threads can block before the aforementioned exception is thrown.
      threadsAllowedToBlockForConnectionMultiplier = 10,

      # Number of ms a thread will wait for a connection to become
      # available on the connection pool, and raises an exception if this
      # does not happen in time. Default is 1000 * 60 * 2
      #maxWaitTime = 0,
 
      #minConnectionsPerHost = 5,
      #maxConnectionLifeTime
    }
  }
}

akka {

  actor {
    provider = "akka.remote.RemoteActorRefProvider"
  }
  remote {
    transport = "akka.remote.netty.NettyRemoteTransport"
    netty {
      hostname = "127.0.0.1"
      port = 2552
    }
    log-received-messages = on
  }

  # logging
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  loglevel = "DEBUG"

}
